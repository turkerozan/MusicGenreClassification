#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu May 24 22:41:51 2018

@author: ozan
"""
import sys
sys.path.append("/usr/local/lib/python3/dist-packages")
import essentia 
import essentia.standard
import essentia.streaming
import essentia.streaming as ess
import sys
import numpy as np
from essentia.streaming import *
from essentia.standard import ChordsDetectionBeats
import os
import essentia_chord_utils as ecu

# Initialize algorithms we will use
loader = ess.MonoLoader(filename='/home/ozan/Desktop/cd/ozan/mab.mp3')
framecutter = ess.FrameCutter(frameSize=8192, hopSize=2048, silentFrames='noise')
#framecutter = ess.FrameCutter( -- silentframes.)
windowing = ess.Windowing(type='blackmanharris62')
spectrum = ess.Spectrum()
tuningFreq = ecu.tuning('/home/ozan/Desktop/cd/ozan/mab.mp3')
spectralpeaks = ess.SpectralPeaks(orderBy='magnitude',
                                  magnitudeThreshold=1e-05,
                                  minFrequency=40,
                                  maxFrequency=5000, 
                                  maxPeaks=10000)
outfile = 'output.json'
# Use default HPCP parameters for plots, however we will need higher resolution 
# and custom parameters for better Key estimation

hpcp = ess.HPCP()
hpcp_key = ess.HPCP(size=36, # we will need higher resolution for Key estimation
                    #referenceFrequency=440, # assume tuning frequency is 44100.
                    referenceFrequency = tuningFreq,
                    harmonics = 8,
                    bandPreset = True,
                    minFrequency = 40.0,
                    maxFrequency = 5000.0,
                    bandSplitFrequency = 500.0,
                    weightType = "cosine",
                    nonLinear = True,
                    windowSize = 1.0)

chords = ChordsDetection()
# Use pool to store data
pool = essentia.Pool() 
loader.audio >> framecutter.signal
framecutter.frame >> windowing.frame >> spectrum.frame
spectrum.spectrum >> spectralpeaks.spectrum
spectralpeaks.magnitudes >> hpcp.magnitudes
spectralpeaks.frequencies >> hpcp.frequencies
hpcp.hpcp >> chords.pcp
hpcp.hpcp >> (pool, 'chroma.hpcp')
chords.chords >> (pool, 'tonal.key_chords')
chords.strength >> (pool, 'tonal.key_strength')
print('Processing audio file ...\n' )




# Run streaming network
essentia.run(loader)
audio = essentia.standard.MonoLoader(filename = '/home/ozan/Desktop/cd/ozan/mab.mp3')()
endTime = len(audio) / 44100.0
stamps = np.arange(0, endTime, float(2048/44100.0))
    # workaround for Essentia behaviour I don't quite undestand
syms = list(pool['tonal.key_chords'][:-1])
strengths = list(pool['tonal.key_strength'][:-1])
segments = ecu.toMirexLab(0.0, endTime, stamps, syms, strengths)
with open(outfile, 'w') as content_file:
    for s in segments:
        content_file.write(str(s) + '\n')

